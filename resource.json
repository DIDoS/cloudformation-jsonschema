{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Resource",
    "description": "Cloudformation template resource",
    "properties": {
        "Properties": {
            "type": "object"
        },
        "Type": {
            "type": "string"
        },
        "DependsOn": {
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ]
        },
        "Metadata": {
            "type": "object"
        },
        "DeletionPolicy": {
            "type": "string",
            "enum": [
                "Delete",
                "Retain",
                "Snapshot"
            ]
        },
        "Condition": {
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "Type"
    ],
    "type": "object",
    "oneOf": [
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Account"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::ApiKey"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Authorizer"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::BasePathMapping"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::ClientCertificate"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Deployment"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Method"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Model"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Resource"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::RestApi"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ApiGateway::Stage"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::AutoScaling::AutoScalingGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::AutoScaling::LaunchConfiguration"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::AutoScaling::LifecycleHook"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::AutoScaling::ScalingPolicy"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::AutoScaling::ScheduledAction"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::Authentication"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::CustomResource"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::Init"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::Interface"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::Stack"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::WaitCondition"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFormation::WaitConditionHandle"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudFront::Distribution"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudTrail::Trail"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CloudWatch::Alarm"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CodeDeploy::Application"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CodeDeploy::DeploymentConfig"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CodeDeploy::DeploymentGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CodePipeline::CustomActionType"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::CodePipeline::Pipeline"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Config::ConfigRule"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Config::ConfigurationRecorder"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Config::DeliveryChannel"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::DataPipeline::Pipeline"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::DirectoryService::MicrosoftAD"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::DirectoryService::SimpleAD"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::DynamoDB::Table"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::CustomerGateway"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::DHCPOptions"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::EIP"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::EIPAssociation"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::Host"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::Instance"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::InternetGateway"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::NatGateway"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::NetworkAcl"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::NetworkAclEntry"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::NetworkInterface"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::NetworkInterfaceAttachment"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::PlacementGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::Route"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::RouteTable"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::SecurityGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::SecurityGroupEgress"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::SecurityGroupIngress"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::SpotFleet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::Subnet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::SubnetNetworkAclAssociation"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::SubnetRouteTableAssociation"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::Volume"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VolumeAttachment"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPC"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPCDHCPOptionsAssociation"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPCEndpoint"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPCGatewayAttachment"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPCPeeringConnection"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPNConnection"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPNConnectionRoute"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPNGateway"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EC2::VPNGatewayRoutePropagation"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ECR::Repository"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ECS::Cluster"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ECS::Service"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ECS::TaskDefinition"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EFS::FileSystem"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EFS::MountTarget"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElastiCache::CacheCluster"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElastiCache::ParameterGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElastiCache::ReplicationGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElastiCache::SecurityGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElastiCache::SecurityGroupIngress"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElastiCache::SubnetGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::Application"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::ApplicationVersion"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::ConfigurationTemplate"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::Environment"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::ElasticLoadBalancing::LoadBalancer"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Elasticsearch::Domain"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EMR::Cluster"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EMR::InstanceGroupConfig"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::EMR::Step"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Events::Rule"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::GameLift::Alias"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::GameLift::Build"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::GameLift::Fleet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::AccessKey"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::Group"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::InstanceProfile"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::ManagedPolicy"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::Policy"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::Role"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::User"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::IAM::UserToGroupAddition"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Kinesis::Stream"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::KMS::Key"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Lambda::EventSourceMapping"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Lambda::Alias"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Lambda::Function"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Lambda::Permission"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Lambda::Version"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Logs::Destination"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Logs::LogGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Logs::LogStream"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Logs::MetricFilter"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Logs::SubscriptionFilter"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::OpsWorks::App"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::OpsWorks::ElasticLoadBalancerAttachment"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::OpsWorks::Instance"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::OpsWorks::Layer"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::OpsWorks::Stack"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBCluster"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBClusterParameterGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBInstance"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBParameterGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBSecurityGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBSecurityGroupIngress"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::DBSubnetGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::EventSubscription"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::RDS::OptionGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Redshift::Cluster"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterParameterGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterSecurityGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterSecurityGroupIngress"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterSubnetGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Route53::HealthCheck"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Route53::HostedZone"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Route53::RecordSet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::Route53::RecordSetGroup"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::S3::Bucket"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::S3::BucketPolicy"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::SDB::Domain"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::SNS::Topic"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::SNS::TopicPolicy"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::SQS::Queue"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::SQS::QueuePolicy"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::SSM::Document"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::ByteMatchSet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::IPSet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::Rule"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::SizeConstraintSet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::SqlInjectionMatchSet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::WebACL"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WAF::XssMatchSet"
        },
        {
            "$ref": "#/definitions/resource_types/AWS::WorkSpaces::Workspace"
        }
    ],
    "definitions": {
        "resource_types": {
            "AWS::ApiGateway::Account": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Account"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CloudWatchRoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::ApiGateway::ApiKey": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::ApiKey"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Enabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StageKeys": {
                                "$ref": "#/definitions/property_types/aws-properties-apitgateway-apikey-stagekey"
                            }
                        }
                    }
                }
            },
            "AWS::ApiGateway::Authorizer": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Authorizer"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AuthorizerCredentials": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AuthorizerResultTtlInSeconds": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "AuthorizerUri": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "IdentitySource": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "IdentityValidationExpression": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AuthorizerUri",
                            "IdentitySource",
                            "Name",
                            "Type"
                        ]
                    }
                }
            },
            "AWS::ApiGateway::BasePathMapping": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::BasePathMapping"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "BasePath": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DomainName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Stage": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DomainName",
                            "RestApiId"
                        ]
                    }
                }
            },
            "AWS::ApiGateway::ClientCertificate": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::ClientCertificate"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::ApiGateway::Deployment": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Deployment"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StageDescription": {
                                "$ref": "#/definitions/property_types/aws-properties-apitgateway-deployment-stagedescription"
                            },
                            "StageName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "RestApiId",
                            "StageName"
                        ]
                    }
                }
            },
            "AWS::ApiGateway::Method": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Method"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApiKeyRequired": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AuthorizationType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AuthorizerId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HttpMethod": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Integration": {
                                "$ref": "#/definitions/property_types/aws-properties-apitgateway-method-integration"
                            },
                            "MethodResponses": {
                                "$ref": "#/definitions/property_types/aws-properties-apitgateway-method-methodresponse"
                            },
                            "RequestModels": {},
                            "RequestParameters": {},
                            "ResourceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AuthorizationType",
                            "HttpMethod",
                            "ResourceId",
                            "RestApiId"
                        ]
                    }
                }
            },
            "AWS::ApiGateway::Model": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Model"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ContentType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Schema": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "RestApiId"
                        ]
                    }
                }
            },
            "AWS::ApiGateway::Resource": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Resource"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ParentId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PathPart": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ParentId",
                            "PathPart",
                            "RestApiId"
                        ]
                    }
                }
            },
            "AWS::ApiGateway::RestApi": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::RestApi"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Body": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "BodyS3Location": {
                                "$ref": "#/definitions/property_types/aws-properties-apitgateway-restapi-bodys3location"
                            }
                        }
                    }
                }
            },
            "AWS::ApiGateway::Stage": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ApiGateway::Stage"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CacheClusterEnabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "CacheClusterSize": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClientCertificateId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DeploymentId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MethodSettings": {
                                "$ref": "#/definitions/property_types/aws-properties-apitgateway-stage-methodsetting"
                            },
                            "RestApiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StageName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Variables": {}
                        },
                        "required": [
                            "DeploymentId",
                            "RestApiId",
                            "StageName"
                        ]
                    }
                }
            },
            "AWS::AutoScaling::AutoScalingGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::AutoScaling::AutoScalingGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AvailabilityZones": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Cooldown": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DesiredCapacity": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HealthCheckGracePeriod": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "HealthCheckType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LaunchConfigurationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LoadBalancerNames": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "MaxSize": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MetricsCollection": {
                                "$ref": "#/definitions/property_types/aws-properties-as-metricscollection"
                            },
                            "MinSize": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NotificationConfigurations": {
                                "$ref": "#/definitions/property_types/aws-properties-as-notificationconfigurations"
                            },
                            "PlacementGroup": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-as-tags"
                            },
                            "TerminationPolicies": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "VPCZoneIdentifier": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "MaxSize",
                            "MinSize"
                        ]
                    }
                }
            },
            "AWS::AutoScaling::LaunchConfiguration": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::AutoScaling::LaunchConfiguration"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AssociatePublicIpAddress": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "BlockDeviceMappings": {
                                "$ref": "#/definitions/property_types/aws-properties-as-launchconfig-blockdev-mapping"
                            },
                            "ClassicLinkVPCId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClassicLinkVPCSecurityGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "EbsOptimized": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "IamInstanceProfile": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ImageId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceMonitoring": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "InstanceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "KernelId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "KeyName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PlacementTenancy": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RamDiskId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SecurityGroups": {
                                "items": {
                                    "$ref": "basic_types.json#/definitions/string"
                                },
                                "type": "array"
                            },
                            "SpotPrice": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "UserData": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ImageId",
                            "InstanceType"
                        ]
                    }
                }
            },
            "AWS::AutoScaling::LifecycleHook": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::AutoScaling::LifecycleHook"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AutoScalingGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DefaultResult": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HeartbeatTimeout": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "LifecycleTransition": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NotificationMetadata": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NotificationTargetARN": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RoleARN": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AutoScalingGroupName",
                            "LifecycleTransition",
                            "NotificationTargetARN",
                            "RoleARN"
                        ]
                    }
                }
            },
            "AWS::AutoScaling::ScalingPolicy": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::AutoScaling::ScalingPolicy"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AdjustmentType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AutoScalingGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Cooldown": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EstimatedInstanceWarmup": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "MetricAggregationType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MinAdjustmentMagnitude": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "PolicyType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ScalingAdjustment": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "StepAdjustments": {
                                "$ref": "#/definitions/property_types/aws-properties-autoscaling-scalingpolicy-stepadjustments"
                            }
                        },
                        "required": [
                            "AdjustmentType",
                            "AutoScalingGroupName"
                        ]
                    }
                }
            },
            "AWS::AutoScaling::ScheduledAction": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::AutoScaling::ScheduledAction"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AutoScalingGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DesiredCapacity": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "EndTime": {},
                            "MaxSize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "MinSize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Recurrence": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StartTime": {}
                        },
                        "required": [
                            "AutoScalingGroupName"
                        ]
                    }
                }
            },
            "AWS::CloudFormation::Authentication": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFormation::Authentication"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "accessKeyId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "buckets": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "password": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "secretKey": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "type": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "uris": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "username": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "roleName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    }
                }
            },
            "AWS::CloudFormation::CustomResource": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "oneOf": [
                            {
                                "enum": [
                                    "AWS::CloudFormation::CustomResource"
                                ]
                            },
                            {
                                "pattern": "^Custom::.*"
                            }
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ServiceToken": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ServiceToken"
                        ]
                    }
                }
            },
            "AWS::CloudFormation::Init": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFormation::Init"
                        ]
                    },
                    "Properties": {
                        "properties": {}
                    }
                }
            },
            "AWS::CloudFormation::Interface": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFormation::Interface"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ParameterGroups": {
                                "$ref": "#/definitions/property_types/aws-properties-cloudformation-interface-parametergroup"
                            },
                            "ParameterLabels": {
                                "$ref": "#/definitions/property_types/aws-properties-cloudformation-interface-parameterlabel"
                            }
                        }
                    }
                }
            },
            "AWS::CloudFormation::Stack": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFormation::Stack"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "NotificationARNs": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Parameters": {
                                "$ref": "#/definitions/property_types/aws-properties-stack-parameters"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "TemplateURL": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "TimeoutInMinutes": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "TemplateURL"
                        ]
                    }
                }
            },
            "AWS::CloudFormation::WaitCondition": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFormation::WaitCondition"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Count": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Handle": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Timeout": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Handle",
                            "Timeout"
                        ]
                    }
                }
            },
            "AWS::CloudFormation::WaitConditionHandle": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFormation::WaitConditionHandle"
                        ]
                    },
                    "Properties": {
                        "properties": {}
                    }
                }
            },
            "AWS::CloudFront::Distribution": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudFront::Distribution"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DistributionConfig": {
                                "$ref": "#/definitions/property_types/aws-properties-cloudfront-distributionconfig"
                            }
                        },
                        "required": [
                            "DistributionConfig"
                        ]
                    }
                }
            },
            "AWS::CloudTrail::Trail": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudTrail::Trail"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CloudWatchLogsLogGroupArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CloudWatchLogsRoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EnableLogFileValidation": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            }
                        }
                    }
                }
            },
            "AWS::CloudWatch::Alarm": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CloudWatch::Alarm"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ActionsEnabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AlarmActions": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "AlarmDescription": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AlarmName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ComparisonOperator": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Dimensions": {
                                "$ref": "#/definitions/property_types/aws-properties-cw-dimension"
                            },
                            "EvaluationPeriods": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InsufficientDataActions": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "MetricName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Namespace": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "OKActions": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Period": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Statistic": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Threshold": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Unit": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ComparisonOperator",
                            "EvaluationPeriods",
                            "MetricName",
                            "Namespace",
                            "Period",
                            "Statistic",
                            "Threshold"
                        ]
                    }
                }
            },
            "AWS::CodeDeploy::Application": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CodeDeploy::Application"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApplicationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::CodeDeploy::DeploymentConfig": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CodeDeploy::DeploymentConfig"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DeploymentConfigName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MinimumHealthyHosts": {
                                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts"
                            }
                        }
                    }
                }
            },
            "AWS::CodeDeploy::DeploymentGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CodeDeploy::DeploymentGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApplicationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AutoScalingGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Deployment": {
                                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-deployment"
                            },
                            "DeploymentConfigName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DeploymentGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Ec2TagFilters": {
                                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-ec2tagfilters"
                            },
                            "OnPremisesInstanceTagFilters": {
                                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters"
                            },
                            "ServiceRoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ApplicationName",
                            "ServiceRoleArn"
                        ]
                    }
                }
            },
            "AWS::CodePipeline::CustomActionType": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CodePipeline::CustomActionType"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Category": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ConfigurationProperties": {
                                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-configurationproperties"
                            },
                            "InputArtifactDetails": {
                                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-artifactdetails"
                            },
                            "OutputArtifactDetails": {
                                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-artifactdetails"
                            },
                            "Provider": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Settings": {
                                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-settings"
                            },
                            "Version": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Category",
                            "InputArtifactDetails",
                            "OutputArtifactDetails",
                            "Provider"
                        ]
                    }
                }
            },
            "AWS::CodePipeline::Pipeline": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::CodePipeline::Pipeline"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ArtifactStore": {
                                "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-artifactstore"
                            },
                            "DisableInboundStageTransitions": {
                                "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-disableinboundstagetransitions"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RestartExecutionOnUpdate": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "RoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Stages": {
                                "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages"
                            }
                        },
                        "required": [
                            "ArtifactStore",
                            "RoleArn",
                            "Stages"
                        ]
                    }
                }
            },
            "AWS::Config::ConfigRule": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Config::ConfigRule"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ConfigRuleName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InputParameters": {},
                            "MaximumExecutionFrequency": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Scope": {
                                "$ref": "#/definitions/property_types/aws-properties-config-configrule-scope"
                            },
                            "Source": {
                                "$ref": "#/definitions/property_types/aws-properties-config-configrule-source"
                            }
                        },
                        "required": [
                            "Source"
                        ]
                    }
                }
            },
            "AWS::Config::ConfigurationRecorder": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Config::ConfigurationRecorder"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RecordingGroup": {
                                "$ref": "#/definitions/property_types/aws-properties-config-configurationrecorder-recordinggroup"
                            },
                            "RoleARN": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "RoleARN"
                        ]
                    }
                }
            },
            "AWS::Config::DeliveryChannel": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Config::DeliveryChannel"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ConfigSnapshotDeliveryProperties": {
                                "$ref": "#/definitions/property_types/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "S3BucketName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "S3KeyPrefix": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SnsTopicARN": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "S3BucketName"
                        ]
                    }
                }
            },
            "AWS::DataPipeline::Pipeline": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::DataPipeline::Pipeline"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Activate": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ParameterObjects": {
                                "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-parameterobjects"
                            },
                            "ParameterValues": {
                                "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-parametervalues"
                            },
                            "PipelineObjects": {
                                "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-pipelineobjects"
                            },
                            "PipelineTags": {
                                "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-pipelinetags"
                            }
                        },
                        "required": [
                            "Name",
                            "PipelineObjects"
                        ]
                    }
                }
            },
            "AWS::DirectoryService::MicrosoftAD": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::DirectoryService::MicrosoftAD"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CreateAlias": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "EnableSso": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Password": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ShortName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpcSettings": {
                                "$ref": "#/definitions/property_types/aws-properties-directoryservice-microsoftad-vpcsettings"
                            }
                        },
                        "required": [
                            "Name",
                            "Password",
                            "VpcSettings"
                        ]
                    }
                }
            },
            "AWS::DirectoryService::SimpleAD": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::DirectoryService::SimpleAD"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CreateAlias": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EnableSso": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Password": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ShortName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Size": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpcSettings": {
                                "$ref": "#/definitions/property_types/aws-properties-directoryservice-simplead-vpcsettings"
                            }
                        },
                        "required": [
                            "Name",
                            "Password",
                            "Size",
                            "VpcSettings"
                        ]
                    }
                }
            },
            "AWS::DynamoDB::Table": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::DynamoDB::Table"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AttributeDefinitions": {
                                "$ref": "#/definitions/property_types/aws-properties-dynamodb-attributedef"
                            },
                            "GlobalSecondaryIndexes": {
                                "$ref": "#/definitions/property_types/aws-properties-dynamodb-gsi"
                            },
                            "KeySchema": {
                                "$ref": "#/definitions/property_types/aws-properties-dynamodb-keyschema"
                            },
                            "LocalSecondaryIndexes": {
                                "$ref": "#/definitions/property_types/aws-properties-dynamodb-lsi"
                            },
                            "ProvisionedThroughput": {
                                "$ref": "#/definitions/property_types/aws-properties-dynamodb-provisionedthroughput"
                            },
                            "StreamSpecification": {
                                "$ref": "#/definitions/property_types/aws-properties-dynamodb-streamspecification"
                            },
                            "TableName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AttributeDefinitions",
                            "KeySchema",
                            "ProvisionedThroughput"
                        ]
                    }
                }
            },
            "AWS::EC2::CustomerGateway": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::CustomerGateway"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "BgpAsn": {},
                            "IpAddress": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "BgpAsn",
                            "IpAddress",
                            "Type"
                        ]
                    }
                }
            },
            "AWS::EC2::DHCPOptions": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::DHCPOptions"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DomainName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DomainNameServers": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "NetbiosNameServers": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "NetbiosNodeType": {},
                            "NtpServers": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        }
                    }
                }
            },
            "AWS::EC2::EIP": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::EIP"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Domain": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::EC2::EIPAssociation": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::EIPAssociation"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AllocationId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EIP": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NetworkInterfaceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PrivateIpAddress": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::EC2::Host": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::Host"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AutoPlacement": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AvailabilityZone",
                            "InstanceType"
                        ]
                    }
                }
            },
            "AWS::EC2::Instance": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::Instance"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Affinity": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "BlockDeviceMappings": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-blockdev-mapping"
                            },
                            "DisableApiTermination": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "EbsOptimized": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "HostId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "IamInstanceProfile": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ImageId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceInitiatedShutdownBehavior": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "KernelId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "KeyName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Monitoring": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "NetworkInterfaces": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-network-iface-embedded"
                            },
                            "PlacementGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PrivateIpAddress": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RamdiskId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SecurityGroupIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SecurityGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SourceDestCheck": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "SsmAssociations": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-instance-ssmassociations"
                            },
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "Tenancy": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "UserData": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Volumes": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-mount-point"
                            },
                            "AdditionalInfo": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ImageId"
                        ]
                    }
                }
            },
            "AWS::EC2::InternetGateway": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::InternetGateway"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        }
                    }
                }
            },
            "AWS::EC2::NatGateway": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::NatGateway"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AllocationId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AllocationId",
                            "SubnetId"
                        ]
                    }
                }
            },
            "AWS::EC2::NetworkAcl": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::NetworkAcl"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::NetworkAclEntry": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::NetworkAclEntry"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CidrBlock": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Egress": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Icmp": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-icmp"
                            },
                            "NetworkAclId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PortRange": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-port-range"
                            },
                            "Protocol": {},
                            "RuleAction": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RuleNumber": {}
                        },
                        "required": [
                            "CidrBlock",
                            "NetworkAclId",
                            "Protocol",
                            "RuleAction",
                            "RuleNumber"
                        ]
                    }
                }
            },
            "AWS::EC2::NetworkInterface": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::NetworkInterface"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "GroupSet": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "PrivateIpAddress": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PrivateIpAddresses": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-network-interface-privateipspec"
                            },
                            "SecondaryPrivateIpAddressCount": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "SourceDestCheck": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "SubnetId"
                        ]
                    }
                }
            },
            "AWS::EC2::NetworkInterfaceAttachment": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::NetworkInterfaceAttachment"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DeleteOnTermination": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "DeviceIndex": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NetworkInterfaceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DeviceIndex",
                            "InstanceId",
                            "NetworkInterfaceId"
                        ]
                    }
                }
            },
            "AWS::EC2::PlacementGroup": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::PlacementGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Strategy": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::EC2::Route": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::Route"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DestinationCidrBlock": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "GatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NatGatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NetworkInterfaceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RouteTableId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DestinationCidrBlock",
                            "RouteTableId"
                        ]
                    }
                }
            },
            "AWS::EC2::RouteTable": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::RouteTable"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::SecurityGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::SecurityGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "GroupDescription": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SecurityGroupEgress": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-security-group-rule"
                            },
                            "SecurityGroupIngress": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-security-group-rule"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "GroupDescription"
                        ]
                    }
                }
            },
            "AWS::EC2::SecurityGroupEgress": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::SecurityGroupEgress"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CidrIp": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DestinationSecurityGroupId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FromPort": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "GroupId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "IpProtocol": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ToPort": {
                                "$ref": "basic_types.json#/definitions/integer"
                            }
                        },
                        "required": [
                            "FromPort",
                            "GroupId",
                            "IpProtocol",
                            "ToPort"
                        ]
                    }
                }
            },
            "AWS::EC2::SecurityGroupIngress": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::SecurityGroupIngress"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CidrIp": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FromPort": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "GroupId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "GroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "IpProtocol": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceSecurityGroupId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceSecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceSecurityGroupOwnerId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ToPort": {
                                "$ref": "basic_types.json#/definitions/integer"
                            }
                        },
                        "required": [
                            "FromPort",
                            "IpProtocol",
                            "ToPort"
                        ]
                    }
                }
            },
            "AWS::EC2::SpotFleet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::SpotFleet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "SpotFleetRequestConfigData": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata"
                            }
                        },
                        "required": [
                            "SpotFleetRequestConfigData"
                        ]
                    }
                }
            },
            "AWS::EC2::Subnet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::Subnet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CidrBlock": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MapPublicIpOnLaunch": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "CidrBlock",
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::SubnetNetworkAclAssociation": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::SubnetNetworkAclAssociation"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NetworkAclId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "SubnetId",
                            "NetworkAclId"
                        ]
                    }
                }
            },
            "AWS::EC2::SubnetRouteTableAssociation": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::SubnetRouteTableAssociation"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "RouteTableId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "RouteTableId",
                            "SubnetId"
                        ]
                    }
                }
            },
            "AWS::EC2::Volume": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::Volume"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AutoEnableIO": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Encrypted": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Iops": {},
                            "KmsKeyId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Size": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SnapshotId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VolumeType": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "AvailabilityZone"
                        ]
                    }
                }
            },
            "AWS::EC2::VolumeAttachment": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VolumeAttachment"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Device": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VolumeId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Device",
                            "InstanceId",
                            "VolumeId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPC": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPC"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CidrBlock": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EnableDnsSupport": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "EnableDnsHostnames": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "InstanceTenancy": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "CidrBlock"
                        ]
                    }
                }
            },
            "AWS::EC2::VPCDHCPOptionsAssociation": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPCDHCPOptionsAssociation"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DhcpOptionsId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DhcpOptionsId",
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPCEndpoint": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPCEndpoint"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "PolicyDocument": {},
                            "RouteTableIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "ServiceName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ServiceName",
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPCGatewayAttachment": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPCGatewayAttachment"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "InternetGatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpnGatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPCPeeringConnection": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPCPeeringConnection"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "PeerVpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "PeerVpcId",
                            "VpcId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPNConnection": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPNConnection"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CustomerGatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StaticRoutesOnly": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpnGatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Type",
                            "CustomerGatewayId",
                            "VpnGatewayId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPNConnectionRoute": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPNConnectionRoute"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DestinationCidrBlock": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpnConnectionId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DestinationCidrBlock",
                            "VpnConnectionId"
                        ]
                    }
                }
            },
            "AWS::EC2::VPNGateway": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPNGateway"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "Type"
                        ]
                    }
                }
            },
            "AWS::EC2::VPNGatewayRoutePropagation": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EC2::VPNGatewayRoutePropagation"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "RouteTableIds": {},
                            "VpnGatewayId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "RouteTableIds",
                            "VpnGatewayId"
                        ]
                    }
                }
            },
            "AWS::ECR::Repository": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ECR::Repository"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "RepositoryName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RepositoryPolicyText": {}
                        }
                    }
                }
            },
            "AWS::ECS::Cluster": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ECS::Cluster"
                        ]
                    },
                    "Properties": {
                        "properties": {}
                    }
                }
            },
            "AWS::ECS::Service": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ECS::Service"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Cluster": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DeploymentConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-ecs-service-deploymentconfiguration"
                            },
                            "DesiredCount": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LoadBalancers": {
                                "$ref": "#/definitions/property_types/aws-properties-ecs-service-loadbalancers"
                            },
                            "Role": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "TaskDefinition": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DesiredCount",
                            "TaskDefinition"
                        ]
                    }
                }
            },
            "AWS::ECS::TaskDefinition": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ECS::TaskDefinition"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ContainerDefinitions": {
                                "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions"
                            },
                            "Volumes": {
                                "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-volumes"
                            }
                        },
                        "required": [
                            "ContainerDefinitions",
                            "Volumes"
                        ]
                    }
                }
            },
            "AWS::EFS::FileSystem": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EFS::FileSystem"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "FileSystemTags": {
                                "$ref": "#/definitions/property_types/aws-properties-efs-filesystem-filesystemtags"
                            }
                        }
                    }
                }
            },
            "AWS::EFS::MountTarget": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EFS::MountTarget"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "FileSystemId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "IpAddress": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SecurityGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "FileSystemId",
                            "SecurityGroups",
                            "SubnetId"
                        ]
                    }
                }
            },
            "AWS::ElastiCache::CacheCluster": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElastiCache::CacheCluster"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AutoMinorVersionUpgrade": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AZMode": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CacheNodeType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CacheParameterGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CacheSecurityGroupNames": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "CacheSubnetGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClusterName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Engine": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EngineVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NotificationTopicArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NumCacheNodes": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Port": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "PreferredAvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PreferredAvailabilityZones": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "PreferredMaintenanceWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SnapshotArns": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SnapshotName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SnapshotRetentionLimit": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "SnapshotWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpcSecurityGroupIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "CacheNodeType",
                            "Engine",
                            "NumCacheNodes"
                        ]
                    }
                }
            },
            "AWS::ElastiCache::ParameterGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElastiCache::ParameterGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CacheParameterGroupFamily": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Properties": {}
                        },
                        "required": [
                            "CacheParameterGroupFamily",
                            "Description",
                            "Properties"
                        ]
                    }
                }
            },
            "AWS::ElastiCache::ReplicationGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElastiCache::ReplicationGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AutomaticFailoverEnabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AutoMinorVersionUpgrade": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "CacheNodeType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CacheParameterGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CacheSecurityGroupNames": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "CacheSubnetGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Engine": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EngineVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NotificationTopicArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NumCacheClusters": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Port": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "PreferredCacheClusterAZs": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "PreferredMaintenanceWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ReplicationGroupDescription": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SecurityGroupIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SnapshotArns": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SnapshotRetentionLimit": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "SnapshotWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "CacheNodeType",
                            "Engine",
                            "NumCacheClusters",
                            "ReplicationGroupDescription"
                        ]
                    }
                }
            },
            "AWS::ElastiCache::SecurityGroup": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElastiCache::SecurityGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::ElastiCache::SecurityGroupIngress": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElastiCache::SecurityGroupIngress"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CacheSecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupOwnerId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "CacheSecurityGroupName",
                            "EC2SecurityGroupName"
                        ]
                    }
                }
            },
            "AWS::ElastiCache::SubnetGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElastiCache::SubnetGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SubnetIds": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Description",
                            "SubnetIds"
                        ]
                    }
                }
            },
            "AWS::ElasticBeanstalk::Application": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElasticBeanstalk::Application"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApplicationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::ElasticBeanstalk::ApplicationVersion": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElasticBeanstalk::ApplicationVersion"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApplicationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceBundle": {
                                "$ref": "#/definitions/property_types/aws-properties-beanstalk-sourcebundle"
                            }
                        },
                        "required": [
                            "ApplicationName",
                            "SourceBundle"
                        ]
                    }
                }
            },
            "AWS::ElasticBeanstalk::ConfigurationTemplate": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElasticBeanstalk::ConfigurationTemplate"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApplicationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EnvironmentId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "OptionSettings": {
                                "$ref": "#/definitions/property_types/aws-properties-beanstalk-option-settings"
                            },
                            "SolutionStackName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-beanstalk-configurationtemplate-sourceconfiguration"
                            }
                        },
                        "required": [
                            "ApplicationName"
                        ]
                    }
                }
            },
            "AWS::ElasticBeanstalk::Environment": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElasticBeanstalk::Environment"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ApplicationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CNAMEPrefix": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EnvironmentName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "OptionSettings": {
                                "$ref": "#/definitions/property_types/aws-properties-beanstalk-option-settings"
                            },
                            "SolutionStackName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "TemplateName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tier": {
                                "$ref": "#/definitions/property_types/aws-properties-beanstalk-environment-tier"
                            },
                            "VersionLabel": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ApplicationName"
                        ]
                    }
                }
            },
            "AWS::ElasticLoadBalancing::LoadBalancer": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::ElasticLoadBalancing::LoadBalancer"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AccessLoggingPolicy": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-accessloggingpolicy"
                            },
                            "AppCookieStickinessPolicy": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-AppCookieStickinessPolicy"
                            },
                            "AvailabilityZones": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "ConnectionDrainingPolicy": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-connectiondrainingpolicy"
                            },
                            "ConnectionSettings": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-connectionsettings"
                            },
                            "CrossZone": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "HealthCheck": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-health-check"
                            },
                            "Instances": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "LBCookieStickinessPolicy": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-LBCookieStickinessPolicy"
                            },
                            "LoadBalancerName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Listeners": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-listener"
                            },
                            "Policies": {
                                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-policy"
                            },
                            "Scheme": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SecurityGroups": {},
                            "Subnets": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "Listeners"
                        ]
                    }
                }
            },
            "AWS::Elasticsearch::Domain": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Elasticsearch::Domain"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AccessPolicies": {},
                            "AdvancedOptions": {},
                            "DomainName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EBSOptions": {
                                "$ref": "#/definitions/property_types/aws-properties-elasticsearch-domain-ebsoptions"
                            },
                            "ElasticsearchClusterConfig": {
                                "$ref": "#/definitions/property_types/aws-properties-elasticsearch-domain-elasticsearchclusterconfig"
                            },
                            "SnapshotOptions": {
                                "$ref": "#/definitions/property_types/aws-properties-elasticsearch-domain-snapshotoptions"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        }
                    }
                }
            },
            "AWS::EMR::Cluster": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EMR::Cluster"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AdditionalInfo": {},
                            "Applications": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-cluster-application"
                            },
                            "BootstrapActions": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-cluster-bootstrapactionconfig"
                            },
                            "Configurations": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-cluster-configuration"
                            },
                            "Instances": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-cluster-jobflowinstancesconfig"
                            },
                            "JobFlowRole": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LogUri": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ReleaseLabel": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ServiceRole": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VisibleToAllUsers": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            }
                        },
                        "required": [
                            "Instances",
                            "JobFlowRole",
                            "Name",
                            "ServiceRole"
                        ]
                    }
                }
            },
            "AWS::EMR::InstanceGroupConfig": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EMR::InstanceGroupConfig"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "BidPrice": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Configurations": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-cluster-configuration"
                            },
                            "EbsConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-ebsconfiguration"
                            },
                            "InstanceCount": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "InstanceRole": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "InstanceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "JobFlowId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Market": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "InstanceCount",
                            "InstanceRole",
                            "InstanceType",
                            "JobFlowId"
                        ]
                    }
                }
            },
            "AWS::EMR::Step": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::EMR::Step"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ActionOnFailure": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HadoopJarStep": {
                                "$ref": "#/definitions/property_types/aws-properties-emr-step-hadoopjarstepconfig"
                            },
                            "JobFlowId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ActionOnFailure",
                            "HadoopJarStep",
                            "JobFlowId",
                            "Name"
                        ]
                    }
                }
            },
            "AWS::Events::Rule": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Events::Rule"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EventPattern": {},
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ScheduleExpression": {},
                            "State": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Targets": {
                                "$ref": "#/definitions/property_types/aws-properties-events-rule-target"
                            }
                        }
                    }
                }
            },
            "AWS::GameLift::Alias": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::GameLift::Alias"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RoutingStrategy": {
                                "$ref": "#/definitions/property_types/aws-properties-gamelift-alias-routingstrategy"
                            }
                        },
                        "required": [
                            "Name",
                            "RoutingStrategy"
                        ]
                    }
                }
            },
            "AWS::GameLift::Build": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::GameLift::Build"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StorageLocation": {
                                "$ref": "#/definitions/property_types/aws-properties-gamelift-build-storagelocation"
                            },
                            "Version": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::GameLift::Fleet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::GameLift::Fleet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "BuildId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DesiredEC2Instances": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "EC2InboundPermissions": {
                                "$ref": "#/definitions/property_types/aws-properties-gamelift-fleet-ec2inboundpermission"
                            },
                            "EC2InstanceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LogPaths": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "MaxSize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "MinSize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ServerLaunchParameters": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ServerLaunchPath": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "BuildId",
                            "DesiredEC2Instances",
                            "EC2InstanceType",
                            "Name",
                            "ServerLaunchPath"
                        ]
                    }
                }
            },
            "AWS::IAM::AccessKey": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::AccessKey"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Serial": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Status": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "UserName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "UserName"
                        ]
                    }
                }
            },
            "AWS::IAM::Group": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::Group"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ManagedPolicyArns": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Path": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Policies": {
                                "$ref": "#/definitions/property_types/aws-properties-iam-policy"
                            }
                        }
                    }
                }
            },
            "AWS::IAM::InstanceProfile": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::InstanceProfile"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Path": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Roles": {}
                        },
                        "required": [
                            "Path",
                            "Roles"
                        ]
                    }
                }
            },
            "AWS::IAM::ManagedPolicy": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::ManagedPolicy"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Groups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Path": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PolicyDocument": {},
                            "Roles": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Users": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "PolicyDocument"
                        ]
                    }
                }
            },
            "AWS::IAM::Policy": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::Policy"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Groups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "PolicyDocument": {},
                            "PolicyName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Roles": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Users": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "PolicyDocument",
                            "PolicyName"
                        ]
                    }
                }
            },
            "AWS::IAM::Role": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::Role"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AssumeRolePolicyDocument": {},
                            "ManagedPolicyArns": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Path": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Policies": {
                                "$ref": "#/definitions/property_types/aws-properties-iam-policy"
                            }
                        },
                        "required": [
                            "AssumeRolePolicyDocument"
                        ]
                    }
                }
            },
            "AWS::IAM::User": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::User"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Groups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "LoginProfile": {
                                "$ref": "#/definitions/property_types/aws-properties-iam-user-loginprofile"
                            },
                            "ManagedPolicyArns": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Path": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Policies": {
                                "$ref": "#/definitions/property_types/aws-properties-iam-policy"
                            }
                        }
                    }
                }
            },
            "AWS::IAM::UserToGroupAddition": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::IAM::UserToGroupAddition"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "GroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Users": {}
                        },
                        "required": [
                            "GroupName",
                            "Users"
                        ]
                    }
                }
            },
            "AWS::Kinesis::Stream": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Kinesis::Stream"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ShardCount": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "ShardCount"
                        ]
                    }
                }
            },
            "AWS::KMS::Key": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::KMS::Key"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Enabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "EnableKeyRotation": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "KeyPolicy": {}
                        },
                        "required": [
                            "KeyPolicy"
                        ]
                    }
                }
            },
            "AWS::Lambda::EventSourceMapping": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Lambda::EventSourceMapping"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "BatchSize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Enabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "EventSourceArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FunctionName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StartingPosition": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "EventSourceArn",
                            "FunctionName",
                            "StartingPosition"
                        ]
                    }
                }
            },
            "AWS::Lambda::Alias": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Lambda::Alias"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FunctionName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FunctionVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "FunctionName",
                            "FunctionVersion",
                            "Name"
                        ]
                    }
                }
            },
            "AWS::Lambda::Function": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Lambda::Function"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Code": {
                                "$ref": "#/definitions/property_types/aws-properties-lambda-function-code"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FunctionName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Handler": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MemorySize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "Role": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Runtime": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Timeout": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "VpcConfig": {
                                "$ref": "#/definitions/property_types/aws-properties-lambda-function-vpcconfig"
                            }
                        },
                        "required": [
                            "Code",
                            "Handler",
                            "Role",
                            "Runtime"
                        ]
                    }
                }
            },
            "AWS::Lambda::Permission": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Lambda::Permission"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Action": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FunctionName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Principal": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceAccount": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Action",
                            "FunctionName",
                            "Principal"
                        ]
                    }
                }
            },
            "AWS::Lambda::Version": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Lambda::Version"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CodeSha256": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FunctionName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "FunctionName"
                        ]
                    }
                }
            },
            "AWS::Logs::Destination": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Logs::Destination"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DestinationName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DestinationPolicy": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "TargetArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DestinationName",
                            "DestinationPolicy",
                            "RoleArn",
                            "TargetArn"
                        ]
                    }
                }
            },
            "AWS::Logs::LogGroup": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Logs::LogGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "RetentionInDays": {
                                "$ref": "basic_types.json#/definitions/integer"
                            }
                        }
                    }
                }
            },
            "AWS::Logs::LogStream": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Logs::LogStream"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "LogGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LogStreamName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "LogGroupName"
                        ]
                    }
                }
            },
            "AWS::Logs::MetricFilter": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Logs::MetricFilter"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "FilterPattern": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "LogGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MetricTransformations": {
                                "$ref": "#/definitions/property_types/aws-properties-logs-metricfilter-metrictransformation"
                            }
                        },
                        "required": [
                            "FilterPattern",
                            "LogGroupName",
                            "MetricTransformations"
                        ]
                    }
                }
            },
            "AWS::Logs::SubscriptionFilter": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Logs::SubscriptionFilter"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DestinationArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "FilterPattern": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LogGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DestinationArn",
                            "FilterPattern",
                            "LogGroupName"
                        ]
                    }
                }
            },
            "AWS::OpsWorks::App": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::OpsWorks::App"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AppSource": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-source"
                            },
                            "Attributes": {
                                "$ref": "basic_types.json#/definitions/key-value-pairs"
                            },
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Domains": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "EnableSsl": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Environment": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-app-environment"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Shortname": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SslConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-app-sslconfiguration"
                            },
                            "StackId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Name",
                            "StackId",
                            "Type"
                        ]
                    }
                }
            },
            "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::OpsWorks::ElasticLoadBalancerAttachment"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ElasticLoadBalancerName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LayerId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ElasticLoadBalancerName",
                            "LayerId"
                        ]
                    }
                }
            },
            "AWS::OpsWorks::Instance": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::OpsWorks::Instance"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AmiId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Architecture": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AutoScalingType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EbsOptimized": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "InstallUpdatesOnBoot": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "InstanceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LayerIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Os": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RootDeviceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SshKeyName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StackId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "TimeBasedAutoScaling": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-instance-timebasedautoscaling"
                            }
                        },
                        "required": [
                            "InstanceType",
                            "LayerIds",
                            "StackId"
                        ]
                    }
                }
            },
            "AWS::OpsWorks::Layer": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::OpsWorks::Layer"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Attributes": {
                                "$ref": "basic_types.json#/definitions/key-value-pairs"
                            },
                            "AutoAssignElasticIps": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AutoAssignPublicIps": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "CustomInstanceProfileArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CustomRecipes": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-recipes"
                            },
                            "CustomSecurityGroupIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "EnableAutoHealing": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "InstallUpdatesOnBoot": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "LifecycleEventConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-lifecycleeventconfiguration"
                            },
                            "LoadBasedAutoScaling": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-loadbasedautoscaling"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Packages": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Shortname": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StackId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VolumeConfigurations": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-volumeconfig"
                            }
                        },
                        "required": [
                            "AutoAssignElasticIps",
                            "AutoAssignPublicIps",
                            "EnableAutoHealing",
                            "Name",
                            "Shortname",
                            "StackId",
                            "Type"
                        ]
                    }
                }
            },
            "AWS::OpsWorks::Stack": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::OpsWorks::Stack"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AgentVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Attributes": {
                                "$ref": "basic_types.json#/definitions/key-value-pairs"
                            },
                            "ChefConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-chefconfiguration"
                            },
                            "ConfigurationManager": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-stackconfigmanager"
                            },
                            "CustomCookbooksSource": {
                                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-source"
                            },
                            "CustomJson": {},
                            "DefaultAvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DefaultInstanceProfileArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DefaultOs": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DefaultRootDeviceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DefaultSshKeyName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DefaultSubnetId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HostnameTheme": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ServiceRoleArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "UseCustomCookbooks": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "UseOpsworksSecurityGroups": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DefaultInstanceProfileArn",
                            "Name",
                            "ServiceRoleArn"
                        ]
                    }
                }
            },
            "AWS::RDS::DBCluster": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBCluster"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AvailabilityZones": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "BackupRetentionPeriod": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "DatabaseName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBClusterParameterGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBSubnetGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Engine": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EngineVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "KmsKeyId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MasterUsername": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MasterUserPassword": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Port": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "PreferredBackupWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PreferredMaintenanceWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SnapshotIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StorageEncrypted": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VpcSecurityGroupIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "Engine"
                        ]
                    }
                }
            },
            "AWS::RDS::DBClusterParameterGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBClusterParameterGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {},
                            "Family": {},
                            "Parameters": {},
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "Description",
                            "Family",
                            "Parameters"
                        ]
                    }
                }
            },
            "AWS::RDS::DBInstance": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBInstance"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AllocatedStorage": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "AllowMajorVersionUpgrade": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AutoMinorVersionUpgrade": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "BackupRetentionPeriod": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CharacterSetName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBClusterIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBInstanceClass": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBInstanceIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBParameterGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBSecurityGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "DBSnapshotIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBSubnetGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Engine": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EngineVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Iops": {},
                            "KmsKeyId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "LicenseModel": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MasterUsername": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MasterUserPassword": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MultiAZ": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "OptionGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Port": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PreferredBackupWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PreferredMaintenanceWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PubliclyAccessible": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "SourceDBInstanceIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "StorageEncrypted": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "StorageType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VPCSecurityGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "DBInstanceClass"
                        ]
                    }
                }
            },
            "AWS::RDS::DBParameterGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBParameterGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {},
                            "Family": {},
                            "Parameters": {},
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "Description",
                            "Family"
                        ]
                    }
                }
            },
            "AWS::RDS::DBSecurityGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBSecurityGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "EC2VpcId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBSecurityGroupIngress": {
                                "$ref": "#/definitions/property_types/aws-properties-rds-security-group-rule"
                            },
                            "GroupDescription": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "DBSecurityGroupIngress",
                            "GroupDescription"
                        ]
                    }
                }
            },
            "AWS::RDS::DBSecurityGroupIngress": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBSecurityGroupIngress"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "CIDRIP": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBSecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupOwnerId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "DBSecurityGroupName"
                        ]
                    }
                }
            },
            "AWS::RDS::DBSubnetGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::DBSubnetGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DBSubnetGroupDescription": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SubnetIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "DBSubnetGroupDescription",
                            "SubnetIds"
                        ]
                    }
                }
            },
            "AWS::RDS::EventSubscription": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::EventSubscription"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Enabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "EventCategories": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SnsTopicArn": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SourceIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SourceType": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "SnsTopicArn"
                        ]
                    }
                }
            },
            "AWS::RDS::OptionGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::RDS::OptionGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "EngineName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MajorEngineVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "OptionGroupDescription": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "OptionConfigurations": {
                                "$ref": "#/definitions/property_types/aws-properties-rds-optiongroup-optionconfigurations"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            }
                        },
                        "required": [
                            "EngineName",
                            "MajorEngineVersion",
                            "OptionGroupDescription",
                            "OptionConfigurations"
                        ]
                    }
                }
            },
            "AWS::Redshift::Cluster": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Redshift::Cluster"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AllowVersionUpgrade": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "AutomatedSnapshotRetentionPeriod": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "AvailabilityZone": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClusterParameterGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClusterSecurityGroups": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "ClusterSubnetGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClusterType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ClusterVersion": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DBName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ElasticIp": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Encrypted": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "HsmClientCertificateIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HsmConfigurationIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "KmsKeyId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MasterUsername": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "MasterUserPassword": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NodeType": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "NumberOfNodes": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "OwnerAccount": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Port": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "PreferredMaintenanceWindow": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PubliclyAccessible": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "SnapshotClusterIdentifier": {},
                            "SnapshotIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VpcSecurityGroupIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "ClusterType",
                            "DBName",
                            "MasterUsername",
                            "MasterUserPassword",
                            "NodeType"
                        ]
                    }
                }
            },
            "AWS::Redshift::ClusterParameterGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Redshift::ClusterParameterGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ParameterGroupFamily": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Parameters": {
                                "$ref": "#/definitions/property_types/aws-property-redshift-clusterparametergroup-parameter"
                            }
                        },
                        "required": [
                            "Description",
                            "ParameterGroupFamily"
                        ]
                    }
                }
            },
            "AWS::Redshift::ClusterSecurityGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Redshift::ClusterSecurityGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Description"
                        ]
                    }
                }
            },
            "AWS::Redshift::ClusterSecurityGroupIngress": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Redshift::ClusterSecurityGroupIngress"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ClusterSecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CIDRIP": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "EC2SecurityGroupOwnerId": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "ClusterSecurityGroupName"
                        ]
                    }
                }
            },
            "AWS::Redshift::ClusterSubnetGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Redshift::ClusterSubnetGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Description": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SubnetIds": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "Description",
                            "SubnetIds"
                        ]
                    }
                }
            },
            "AWS::Route53::HealthCheck": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Route53::HealthCheck"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "HealthCheckConfig": {
                                "$ref": "#/definitions/property_types/aws-properties-route53-healthcheck-healthcheckconfig"
                            },
                            "HealthCheckTags": {
                                "$ref": "#/definitions/property_types/aws-properties-route53-healthcheck-healthchecktags"
                            }
                        },
                        "required": [
                            "HealthCheckConfig"
                        ]
                    }
                }
            },
            "AWS::Route53::HostedZone": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Route53::HostedZone"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "HostedZoneConfig": {
                                "$ref": "#/definitions/property_types/aws-properties-route53-hostedzone-hostedzoneconfig"
                            },
                            "HostedZoneTags": {
                                "$ref": "#/definitions/property_types/aws-properties-route53-hostedzone-hostedzonetags"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "VPCs": {
                                "$ref": "#/definitions/property_types/aws-resource-route53-hostedzone-hostedzonevpcs"
                            }
                        },
                        "required": [
                            "Name"
                        ]
                    }
                }
            },
            "AWS::Route53::RecordSet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Route53::RecordSet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AliasTarget": {
                                "$ref": "#/definitions/property_types/aws-properties-route53-aliastarget"
                            },
                            "Comment": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Failover": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "GeoLocation": {
                                "$ref": "#/definitions/property_types/aws-properties-route53-recordset-geolocation"
                            },
                            "HealthCheckId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HostedZoneId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HostedZoneName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Region": {},
                            "ResourceRecords": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            },
                            "SetIdentifier": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "TTL": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Type": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Weight": {}
                        },
                        "required": [
                            "Name",
                            "Type"
                        ]
                    }
                }
            },
            "AWS::Route53::RecordSetGroup": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::Route53::RecordSetGroup"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Comment": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HostedZoneId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "HostedZoneName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RecordSets": {
                                "items": {
                                    "$ref": "#/definitions/resource_types/AWS::Route53::RecordSet/properties/Properties"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "RecordSets"
                        ]
                    }
                }
            },
            "AWS::S3::Bucket": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::S3::Bucket"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "AccessControl": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "BucketName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "CorsConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-cors"
                            },
                            "LifecycleConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig"
                            },
                            "LoggingConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-loggingconfig"
                            },
                            "NotificationConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfig"
                            },
                            "ReplicationConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-replicationconfiguration"
                            },
                            "Tags": {
                                "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                            },
                            "VersioningConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-versioningconfig"
                            },
                            "WebsiteConfiguration": {
                                "$ref": "#/definitions/property_types/aws-properties-s3-websiteconfiguration"
                            }
                        }
                    }
                }
            },
            "AWS::S3::BucketPolicy": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::S3::BucketPolicy"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Bucket": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "PolicyDocument": {}
                        },
                        "required": [
                            "Bucket",
                            "PolicyDocument"
                        ]
                    }
                }
            },
            "AWS::SDB::Domain": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::SDB::Domain"
                        ]
                    },
                    "Properties": {
                        "properties": {}
                    }
                }
            },
            "AWS::SNS::Topic": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::SNS::Topic"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DisplayName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Subscription": {
                                "$ref": "#/definitions/property_types/aws-properties-sns-subscription"
                            },
                            "TopicName": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        }
                    }
                }
            },
            "AWS::SNS::TopicPolicy": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::SNS::TopicPolicy"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "PolicyDocument": {},
                            "Topics": {}
                        },
                        "required": [
                            "PolicyDocument",
                            "Topics"
                        ]
                    }
                }
            },
            "AWS::SQS::Queue": {
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::SQS::Queue"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DelaySeconds": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "MaximumMessageSize": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "MessageRetentionPeriod": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "QueueName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "ReceiveMessageWaitTimeSeconds": {
                                "$ref": "basic_types.json#/definitions/integer"
                            },
                            "RedrivePolicy": {
                                "$ref": "#/definitions/property_types/aws-properties-sqs-queues-redrivepolicy"
                            },
                            "VisibilityTimeout": {
                                "$ref": "basic_types.json#/definitions/integer"
                            }
                        }
                    }
                }
            },
            "AWS::SQS::QueuePolicy": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::SQS::QueuePolicy"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "PolicyDocument": {},
                            "Queues": {
                                "$ref": "basic_types.json#/definitions/list<string>"
                            }
                        },
                        "required": [
                            "PolicyDocument",
                            "Queues"
                        ]
                    }
                }
            },
            "AWS::SSM::Document": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::SSM::Document"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Content": {}
                        },
                        "required": [
                            "Content"
                        ]
                    }
                }
            },
            "AWS::WAF::ByteMatchSet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::ByteMatchSet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "ByteMatchTuples": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-bytematchset-bytematchtuples"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Name"
                        ]
                    }
                }
            },
            "AWS::WAF::IPSet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::IPSet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "IPSetDescriptors": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-ipset-ipsetdescriptors"
                            },
                            "c-ip": {},
                            "x-forwarded-for": {},
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "Name"
                        ]
                    }
                }
            },
            "AWS::WAF::Rule": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::Rule"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "MetricName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Predicates": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-rule-predicates"
                            }
                        },
                        "required": [
                            "MetricName",
                            "Name"
                        ]
                    }
                }
            },
            "AWS::WAF::SizeConstraintSet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::SizeConstraintSet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SizeConstraints": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-sizeconstraintset-sizeconstraint"
                            }
                        },
                        "required": [
                            "Name",
                            "SizeConstraints"
                        ]
                    }
                }
            },
            "AWS::WAF::SqlInjectionMatchSet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::SqlInjectionMatchSet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "SqlInjectionMatchTuples": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples"
                            }
                        },
                        "required": [
                            "Name"
                        ]
                    }
                }
            },
            "AWS::WAF::WebACL": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::WebACL"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "DefaultAction": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-webacl-action"
                            },
                            "MetricName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "Rules": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-webacl-rules"
                            }
                        },
                        "required": [
                            "DefaultAction",
                            "MetricName",
                            "Name"
                        ]
                    }
                }
            },
            "AWS::WAF::XssMatchSet": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WAF::XssMatchSet"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "Name": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "XssMatchTuples": {
                                "$ref": "#/definitions/property_types/aws-properties-waf-xssmatchset-xssmatchtuple"
                            }
                        },
                        "required": [
                            "Name"
                        ]
                    }
                }
            },
            "AWS::WorkSpaces::Workspace": {
                "required": [
                    "Properties"
                ],
                "properties": {
                    "Type": {
                        "enum": [
                            "AWS::WorkSpaces::Workspace"
                        ]
                    },
                    "Properties": {
                        "properties": {
                            "BundleId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "DirectoryId": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "UserName": {
                                "$ref": "basic_types.json#/definitions/string"
                            },
                            "RootVolumeEncryptionEnabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "UserVolumeEncryptionEnabled": {
                                "$ref": "basic_types.json#/definitions/boolean"
                            },
                            "VolumeEncryptionKey": {
                                "$ref": "basic_types.json#/definitions/string"
                            }
                        },
                        "required": [
                            "BundleId",
                            "DirectoryId",
                            "UserName"
                        ]
                    }
                }
            }
        },
        "property_types": {
            "aws-properties-apitgateway-apikey-stagekey": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-apikey-stagekey.html",
                "title": "Amazon API Gateway ApiKey StageKey"
            },
            "aws-properties-apitgateway-deployment-stagedescription": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription.html",
                "title": "Amazon API Gateway Deployment StageDescription"
            },
            "aws-properties-apitgateway-deployment-stagedescription-methodsetting": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription-methodsetting.html",
                "title": "Amazon API Gateway Deployment StageDescription MethodSetting"
            },
            "aws-properties-apitgateway-method-integration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html",
                "title": "Amazon API Gateway Method Integration"
            },
            "aws-properties-apitgateway-method-integration-integrationresponse": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html",
                "title": "Amazon API Gateway Method Integration IntegrationResponse"
            },
            "aws-properties-apitgateway-method-methodresponse": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html",
                "title": "Amazon API Gateway Method MethodResponse"
            },
            "aws-properties-apitgateway-restapi-bodys3location": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-restapi-bodys3location.html",
                "title": "Amazon API Gateway RestApi S3Location"
            },
            "aws-properties-apitgateway-stage-methodsetting": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html",
                "title": "Amazon API Gateway Stage MethodSetting"
            },
            "aws-properties-as-launchconfig-blockdev-mapping": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html",
                "title": "AWS CloudFormation AutoScaling Block Device Mapping Property Type"
            },
            "aws-properties-as-launchconfig-blockdev-template": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html",
                "title": "AWS CloudFormation AutoScaling EBS Block Device Property Type"
            },
            "aws-properties-as-metricscollection": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html",
                "title": "Auto Scaling MetricsCollection"
            },
            "aws-properties-as-notificationconfigurations": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html",
                "title": "Auto Scaling NotificationConfigurations"
            },
            "aws-properties-autoscaling-scalingpolicy-stepadjustments": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html",
                "title": "Auto Scaling ScalingPolicy StepAdjustments"
            },
            "aws-properties-as-tags": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html",
                "title": "Auto Scaling Tags Property Type"
            },
            "aws-properties-stack-parameters": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack-parameters.html",
                "title": "CloudFormation Stack Parameters Property Type"
            },
            "aws-properties-cloudformation-interface-label": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-label.html",
                "title": "AWS CloudFormation Interface Label"
            },
            "aws-properties-cloudformation-interface-parametergroup": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parametergroup.html",
                "title": "AWS CloudFormation Interface ParameterGroup"
            },
            "aws-properties-cloudformation-interface-parameterlabel": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parameterlabel.html",
                "title": "AWS CloudFormation Interface ParameterLabel"
            },
            "aws-properties-cloudfront-distributionconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig.html",
                "title": "CloudFront DistributionConfig"
            },
            "aws-properties-cloudfront-cachebehavior": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachebehavior.html",
                "title": "CloudFront DistributionConfig CacheBehavior"
            },
            "aws-properties-cloudfront-distributionconfig-customerrorresponse": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-customerrorresponse.html",
                "title": "CloudFront DistributionConfig CustomErrorResponse"
            },
            "aws-properties-cloudfront-defaultcachebehavior": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-defaultcachebehavior.html",
                "title": "CloudFront DefaultCacheBehavior"
            },
            "aws-properties-cloudfront-logging": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-logging.html",
                "title": "CloudFront Logging"
            },
            "aws-properties-cloudfront-origin": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin.html",
                "title": "CloudFront DistributionConfig Origin"
            },
            "aws-properties-cloudfront-customorigin": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-customorigin.html",
                "title": "CloudFront DistributionConfig Origin CustomOrigin"
            },
            "aws-properties-cloudfront-s3origin": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-s3origin.html",
                "title": "CloudFront DistributionConfig Origin S3Origin"
            },
            "aws-properties-cloudfront-distributionconfig-restrictions": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions.html",
                "title": "CloudFront DistributionConfiguration Restrictions"
            },
            "aws-properties-cloudfront-distributionconfig-restrictions-georestriction": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions-georestriction.html",
                "title": "CloudFront DistributionConfig Restrictions GeoRestriction"
            },
            "aws-properties-cloudfront-distributionconfig-viewercertificate": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-viewercertificate.html",
                "title": "CloudFront DistributionConfiguration ViewerCertificate"
            },
            "aws-properties-cloudfront-forwardedvalues": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues.html",
                "title": "CloudFront ForwardedValues"
            },
            "aws-properties-cloudfront-forwardedvalues-cookies": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues-cookies.html",
                "title": "CloudFront ForwardedValues Cookies"
            },
            "aws-properties-cw-dimension": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html",
                "title": "CloudWatch Metric Dimension Property Type"
            },
            "aws-properties-events-rule-target": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html",
                "title": "Amazon CloudWatch Events Rule Target"
            },
            "aws-properties-logs-metricfilter-metrictransformation": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html",
                "title": "CloudWatch Logs MetricFilter MetricTransformation Property"
            },
            "aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html",
                "title": "AWS CodeDeploy DeploymentConfig MinimumHealthyHosts"
            },
            "aws-properties-codedeploy-deploymentgroup-deployment": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html",
                "title": "AWS CodeDeploy DeploymentGroup Deployment"
            },
            "aws-properties-codedeploy-deploymentgroup-deployment-revision": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html",
                "title": "AWS CodeDeploy DeploymentGroup Deployment Revision"
            },
            "aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html",
                "title": "AWS CodeDeploy DeploymentGroup Deployment Revision GitHubLocation"
            },
            "aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html",
                "title": "AWS CodeDeploy DeploymentGroup Deployment Revision S3Location"
            },
            "aws-properties-codedeploy-deploymentgroup-ec2tagfilters": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilters.html",
                "title": "AWS CodeDeploy DeploymentGroup Ec2TagFilters"
            },
            "aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters.html",
                "title": "AWS CodeDeploy DeploymentGroup OnPremisesInstanceTagFilters"
            },
            "aws-resource-codepipeline-customactiontype-artifactdetails": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-artifactdetails.html",
                "title": "AWS CodePipeline CustomActionType ArtifactDetails"
            },
            "aws-resource-codepipeline-customactiontype-configurationproperties": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html",
                "title": "AWS CodePipeline CustomActionType ConfigurationProperties"
            },
            "aws-resource-codepipeline-customactiontype-settings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-settings.html",
                "title": "AWS CodePipeline CustomActionType Settings"
            },
            "aws-properties-codepipeline-pipeline-artifactstore": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html",
                "title": "AWS CodePipeline Pipeline ArtifactStore"
            },
            "aws-properties-codepipeline-pipeline-artifactstore-encryptionkey": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html",
                "title": "AWS CodePipeline Pipeline ArtifactStore EncryptionKey"
            },
            "aws-properties-codepipeline-pipeline-disableinboundstagetransitions": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html",
                "title": "AWS CodePipeline Pipeline DisableInboundStageTransitions"
            },
            "aws-properties-codepipeline-pipeline-stages": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html",
                "title": "AWS CodePipeline Pipeline Stages"
            },
            "aws-properties-codepipeline-pipeline-stages-actions": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html",
                "title": "AWS CodePipeline Pipeline Stages Actions"
            },
            "aws-properties-codepipeline-pipeline-stages-actions-actiontypeid": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html",
                "title": "AWS CodePipeline Pipeline Stages Actions ActionTypeId"
            },
            "aws-properties-codepipeline-pipeline-stages-actions-inputartifacts": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html",
                "title": "AWS CodePipeline Pipeline Stages Actions InputArtifacts"
            },
            "aws-properties-codepipeline-pipeline-stages-actions-outputartifacts": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html",
                "title": "AWS CodePipeline Pipeline Stages Actions OutputArtifacts"
            },
            "aws-properties-codepipeline-pipeline-stages-blockers": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html",
                "title": "AWS CodePipeline Pipeline Stages Blockers"
            },
            "aws-properties-config-configrule-scope": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html",
                "title": "AWS Config ConfigRule Scope"
            },
            "aws-properties-config-configrule-source": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html",
                "title": "AWS Config ConfigRule Source"
            },
            "aws-properties-config-configrule-source-sourcedetails": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html",
                "title": "AWS Config ConfigRule Source SourceDetails"
            },
            "aws-properties-config-configurationrecorder-recordinggroup": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html",
                "title": "AWS Config ConfigurationRecorder RecordingGroup"
            },
            "aws-properties-config-deliverychannel-configsnapshotdeliveryproperties": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html",
                "title": "AWS Config DeliveryChannel ConfigSnapshotDeliveryProperties"
            },
            "aws-properties-datapipeline-pipeline-parameterobjects": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects.html",
                "title": "AWS Data Pipeline Pipeline ParameterObjects"
            },
            "aws-properties-datapipeline-pipeline-parameterobjects-attributes": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects-attributes.html",
                "title": "AWS Data Pipeline Parameter Objects Attributes"
            },
            "aws-properties-datapipeline-pipeline-parametervalues": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parametervalues.html",
                "title": "AWS Data Pipeline Pipeline ParameterValues"
            },
            "aws-properties-datapipeline-pipeline-pipelineobjects": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects.html",
                "title": "AWS Data Pipeline PipelineObjects"
            },
            "aws-properties-datapipeline-pipeline-pipelineobjects-fields": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects-fields.html",
                "title": "AWS Data Pipeline Data Pipeline Object Fields"
            },
            "aws-properties-datapipeline-pipeline-pipelinetags": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelinetags.html",
                "title": "AWS Data Pipeline Pipeline PipelineTags"
            },
            "aws-properties-directoryservice-microsoftad-vpcsettings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-microsoftad-vpcsettings.html",
                "title": "AWS Directory Service MicrosoftAD VpcSettings"
            },
            "aws-properties-directoryservice-simplead-vpcsettings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-simplead-vpcsettings.html",
                "title": "AWS Directory Service SimpleAD VpcSettings"
            },
            "aws-properties-dynamodb-attributedef": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-attributedef.html",
                "title": "DynamoDB Attribute Definitions"
            },
            "aws-properties-dynamodb-gsi": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-gsi.html",
                "title": "DynamoDB Global Secondary Indexes"
            },
            "aws-properties-dynamodb-keyschema": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-keyschema.html",
                "title": "DynamoDB Key Schema"
            },
            "aws-properties-dynamodb-lsi": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html",
                "title": "DynamoDB Local Secondary Indexes"
            },
            "aws-properties-dynamodb-projectionobject": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html",
                "title": "DynamoDB Projection Object"
            },
            "aws-properties-dynamodb-provisionedthroughput": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html",
                "title": "DynamoDB Provisioned Throughput"
            },
            "aws-properties-dynamodb-streamspecification": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html",
                "title": "DynamoDB Table StreamSpecification"
            },
            "aws-properties-ec2-blockdev-mapping": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html",
                "title": "Amazon EC2 Block Device Mapping Property"
            },
            "aws-properties-ec2-blockdev-template": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html",
                "title": "Amazon Elastic Block Store Block Device Property"
            },
            "aws-properties-ec2-icmp": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-icmp.html",
                "title": "EC2 ICMP Property Type"
            },
            "aws-properties-ec2-instance-ssmassociations": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html",
                "title": "Amazon EC2 Instance SsmAssociations"
            },
            "aws-properties-ec2-instance-ssmassociations-associationparameters": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html",
                "title": "Amazon EC2 Instance SsmAssociations AssociationParameters"
            },
            "aws-properties-ec2-mount-point": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html",
                "title": "EC2 MountPoint Property Type"
            },
            "aws-properties-ec2-network-iface-embedded": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html",
                "title": "EC2 NetworkInterface Embedded Property Type"
            },
            "aws-properties-ec2-network-interface-association": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-association.html",
                "title": "EC2 Network Interface Association"
            },
            "aws-properties-ec2-network-interface-attachment": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-attachment.html",
                "title": "EC2 Network Interface Attachment"
            },
            "aws-properties-ec2-network-interface-groupitem": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-groupitem.html",
                "title": "EC2 Network Interface Group Item"
            },
            "aws-properties-ec2-network-interface-privateipspec": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
                "title": "EC2 Network Interface Private IP Specification"
            },
            "aws-properties-ec2-port-range": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-port-range.html",
                "title": "EC2 PortRange Property Type"
            },
            "aws-properties-ec2-security-group-rule": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
                "title": "EC2 Security Group Rule Property Type"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html",
                "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings Ebs"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications IamInstanceProfile"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html",
                "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData LaunchSpecifications Monitoring"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces PrivateIpAddresses"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications Placement"
            },
            "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html",
                "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications SecurityGroups"
            },
            "aws-properties-ecs-service-deploymentconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html",
                "title": "Amazon EC2 Container Service Service DeploymentConfiguration"
            },
            "aws-properties-ecs-service-loadbalancers": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html",
                "title": "Amazon EC2 Container Service Service LoadBalancers"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-environment": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Environment"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-hostentry": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions HostEntry"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions LogConfiguration"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions MountPoints"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-portmappings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions PortMappings"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-ulimit": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Ulimit"
            },
            "aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html",
                "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions VolumesFrom"
            },
            "aws-properties-ecs-taskdefinition-volumes": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html",
                "title": "Amazon EC2 Container Service TaskDefinition Volumes"
            },
            "aws-properties-ecs-taskdefinition-volumes-host": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html",
                "title": "Amazon EC2 Container Service TaskDefinition Volumes Host"
            },
            "aws-properties-efs-filesystem-filesystemtags": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-efs-filesystem-filesystemtags.html",
                "title": "Amazon Elastic File System FileSystem FileSystemTags"
            },
            "aws-properties-beanstalk-environment-tier": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html",
                "title": "Elastic Beanstalk Environment Tier Property Type"
            },
            "aws-properties-beanstalk-option-settings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html",
                "title": "Elastic Beanstalk OptionSettings Property Type"
            },
            "aws-properties-beanstalk-sourcebundle": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-sourcebundle.html",
                "title": "Elastic Beanstalk SourceBundle Property Type"
            },
            "aws-properties-beanstalk-configurationtemplate-sourceconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-configurationtemplate-sourceconfiguration.html",
                "title": "Elastic Beanstalk SourceConfiguration Property Type"
            },
            "aws-properties-ec2-elb-accessloggingpolicy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html",
                "title": "Elastic Load Balancing AccessLoggingPolicy"
            },
            "aws-properties-ec2-elb-AppCookieStickinessPolicy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html",
                "title": "ElasticLoadBalancing AppCookieStickinessPolicy Type"
            },
            "aws-properties-ec2-elb-connectiondrainingpolicy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html",
                "title": "Elastic Load Balancing ConnectionDrainingPolicy"
            },
            "aws-properties-ec2-elb-connectionsettings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html",
                "title": "Elastic Load Balancing ConnectionSettings"
            },
            "aws-properties-ec2-elb-health-check": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html",
                "title": "ElasticLoadBalancing HealthCheck Type"
            },
            "aws-properties-ec2-elb-LBCookieStickinessPolicy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html",
                "title": "ElasticLoadBalancing LBCookieStickinessPolicy Type"
            },
            "aws-properties-ec2-elb-listener": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html",
                "title": "ElasticLoadBalancing Listener Property Type"
            },
            "aws-properties-ec2-elb-policy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html",
                "title": "ElasticLoadBalancing Policy Type"
            },
            "aws-properties-elasticsearch-domain-ebsoptions": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-ebsoptions.html",
                "title": "Amazon Elasticsearch Service Domain EBSOptions"
            },
            "aws-properties-elasticsearch-domain-elasticsearchclusterconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-elasticsearchclusterconfig.html",
                "title": "Amazon Elasticsearch Service Domain ElasticsearchClusterConfig"
            },
            "aws-properties-elasticsearch-domain-snapshotoptions": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-snapshotoptions.html",
                "title": "Amazon Elasticsearch Service Domain SnapshotOptions"
            },
            "aws-properties-emr-cluster-application": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-application.html",
                "title": "Amazon Elastic MapReduce Cluster Application"
            },
            "aws-properties-emr-cluster-bootstrapactionconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig.html",
                "title": "Amazon Elastic MapReduce Cluster BootstrapActionConfig"
            },
            "aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig.html",
                "title": "Amazon Elastic MapReduce Cluster BootstrapActionConfig ScriptBootstrapActionConfig"
            },
            "aws-properties-emr-cluster-configuration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html",
                "title": "Amazon Elastic MapReduce Cluster Configuration"
            },
            "aws-properties-emr-cluster-jobflowinstancesconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html",
                "title": "Amazon Elastic MapReduce Cluster JobFlowInstancesConfig"
            },
            "aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html",
                "title": "Amazon Elastic MapReduce Cluster JobFlowInstancesConfig InstanceGroupConfig"
            },
            "aws-properties-emr-cluster-jobflowinstancesconfig-placementtype": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-placementtype.html",
                "title": "Amazon Elastic MapReduce Cluster JobFlowInstancesConfig PlacementType"
            },
            "aws-properties-emr-ebsconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html",
                "title": "Amazon Elastic MapReduce EbsConfiguration"
            },
            "aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html",
                "title": "Amazon Elastic MapReduce EbsConfiguration EbsBlockDeviceConfigs"
            },
            "aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html",
                "title": "Amazon Elastic MapReduce EbsConfiguration EbsBlockDeviceConfig VolumeSpecification"
            },
            "aws-properties-emr-step-hadoopjarstepconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig.html",
                "title": "Amazon Elastic MapReduce Step HadoopJarStepConfig"
            },
            "aws-properties-emr-step-hadoopjarstepconfig-keyvalue": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig-keyvalue.html",
                "title": "Amazon Elastic MapReduce Step HadoopJarStepConfig KeyValue"
            },
            "aws-properties-gamelift-alias-routingstrategy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-alias-routingstrategy.html",
                "title": "Amazon GameLift Alias RoutingStrategy"
            },
            "aws-properties-gamelift-build-storagelocation": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-build-storagelocation.html",
                "title": "Amazon GameLift Build StorageLocation"
            },
            "aws-properties-gamelift-fleet-ec2inboundpermission": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html",
                "title": "Amazon GameLift Fleet EC2InboundPermission"
            },
            "aws-properties-iam-policy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html",
                "title": "IAM Policies"
            },
            "aws-properties-iam-user-loginprofile": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html",
                "title": "IAM User LoginProfile"
            },
            "aws-properties-lambda-function-code": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html",
                "title": "AWS Lambda Function Code"
            },
            "aws-properties-lambda-function-vpcconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html",
                "title": "AWS Lambda Function VPCConfig"
            },
            "aws-properties-name": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html",
                "title": "Name Type"
            },
            "aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds.html",
                "title": "AWS OpsWorks AutoScalingThresholds Type"
            },
            "aws-properties-opsworks-stack-chefconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-chefconfiguration.html",
                "title": "AWS OpsWorks ChefConfiguration Type"
            },
            "aws-properties-opsworks-layer-lifecycleeventconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration.html",
                "title": "AWS OpsWorks Layer LifeCycleConfiguration"
            },
            "aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration.html",
                "title": "AWS OpsWorks Layer LifeCycleConfiguration ShutdownEventConfiguration"
            },
            "aws-properties-opsworks-layer-loadbasedautoscaling": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling.html",
                "title": "AWS OpsWorks LoadBasedAutoScaling Type"
            },
            "aws-properties-opsworks-layer-recipes": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-recipes.html",
                "title": "AWS OpsWorks Recipes Type"
            },
            "aws-properties-opsworks-stack-source": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-source.html",
                "title": "AWS OpsWorks Source Type"
            },
            "aws-properties-opsworks-app-environment": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-environment.html",
                "title": "AWS OpsWorks App Environment"
            },
            "aws-properties-opsworks-app-sslconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-sslconfiguration.html",
                "title": "AWS OpsWorks SslConfiguration Type"
            },
            "aws-properties-opsworks-stack-stackconfigmanager": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-stackconfigmanager.html",
                "title": "AWS OpsWorks StackConfigurationManager Type"
            },
            "aws-properties-opsworks-instance-timebasedautoscaling": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-timebasedautoscaling.html",
                "title": "AWS OpsWorks TimeBasedAutoScaling Type"
            },
            "aws-properties-opsworks-layer-volumeconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-volumeconfig.html",
                "title": "AWS OpsWorks VolumeConfiguration Type"
            },
            "aws-property-redshift-clusterparametergroup-parameter": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html",
                "title": "Amazon Redshift Parameter Type"
            },
            "aws-properties-resource-tags": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html",
                "title": "AWS CloudFormation Resource Tags Type"
            },
            "aws-properties-rds-optiongroup-optionconfigurations": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations.html",
                "title": "Amazon RDS OptionGroup OptionConfigurations"
            },
            "aws-properties-rds-optiongroup-optionconfigurations-optionsettings": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations-optionsettings.html",
                "title": "Amazon RDS OptionGroup OptionConfigurations OptionSettings"
            },
            "aws-properties-rds-security-group-rule": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group-rule.html",
                "title": "Amazon RDS Security Group Rule"
            },
            "aws-properties-route53-aliastarget": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html",
                "title": "Route 53 AliasTarget Property"
            },
            "aws-properties-route53-recordset-geolocation": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html",
                "title": "Amazon Route 53 Record Set GeoLocation Property"
            },
            "aws-properties-route53-healthcheck-healthcheckconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html",
                "title": "Amazon Route 53 HealthCheckConfig"
            },
            "aws-properties-route53-healthcheck-healthchecktags": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktags.html",
                "title": "Amazon Route 53 HealthCheckTags"
            },
            "aws-properties-route53-hostedzone-hostedzoneconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html",
                "title": "Amazon Route 53 HostedZoneConfig Property"
            },
            "aws-properties-route53-hostedzone-hostedzonetags": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html",
                "title": "Amazon Route 53 HostedZoneTags"
            },
            "aws-resource-route53-hostedzone-hostedzonevpcs": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html",
                "title": "Amazon Route 53 HostedZoneVPCs"
            },
            "aws-properties-s3-bucket-cors": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html",
                "title": "Amazon S3 Cors Configuration"
            },
            "aws-properties-s3-bucket-cors-corsrule": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html",
                "title": "Amazon S3 Cors Configuration Rule"
            },
            "aws-properties-s3-bucket-lifecycleconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html",
                "title": "Amazon S3 Lifecycle Configuration"
            },
            "aws-properties-s3-bucket-lifecycleconfig-rule": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html",
                "title": "Amazon S3 Lifecycle Rule"
            },
            "aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html",
                "title": "Amazon S3 Lifecycle Rule NoncurrentVersionTransition"
            },
            "aws-properties-s3-bucket-lifecycleconfig-rule-transition": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html",
                "title": "Amazon S3 Lifecycle Rule Transition"
            },
            "aws-properties-s3-bucket-loggingconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html",
                "title": "Amazon S3 Logging Configuration"
            },
            "aws-properties-s3-bucket-notificationconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html",
                "title": "Amazon S3 NotificationConfiguration"
            },
            "aws-properties-s3-bucket-notificationconfiguration-config-filter": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html",
                "title": "Amazon S3 NotificationConfiguration Config Filter"
            },
            "aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html",
                "title": "Amazon S3 NotificationConfiguration Config Filter S3Key"
            },
            "aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html",
                "title": "Amazon S3 NotificationConfiguration Config Filter S3Key Rules"
            },
            "aws-properties-s3-bucket-notificationconfig-lambdaconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html",
                "title": "Amazon Simple Storage Service NotificationConfiguration LambdaConfigurations"
            },
            "aws-properties-s3-bucket-notificationconfig-queueconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html",
                "title": "Amazon Simple Storage Service NotificationConfiguration QueueConfigurations"
            },
            "aws-properties-s3-bucket-notificationconfig-topicconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html",
                "title": "Amazon S3 NotificationConfiguration TopicConfigurations"
            },
            "aws-properties-s3-bucket-replicationconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html",
                "title": "Amazon S3 ReplicationConfiguration"
            },
            "aws-properties-s3-bucket-replicationconfiguration-rules": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html",
                "title": "Amazon S3 ReplicationConfiguration Rules"
            },
            "aws-properties-s3-bucket-replicationconfiguration-rules-destination": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html",
                "title": "Amazon S3 ReplicationConfiguration Rules Destination"
            },
            "aws-properties-s3-bucket-versioningconfig": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html",
                "title": "Amazon S3 Versioning Configuration"
            },
            "aws-properties-s3-websiteconfiguration": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html",
                "title": "Amazon S3 Website Configuration Property"
            },
            "aws-properties-s3-websiteconfiguration-redirectallrequeststo": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html",
                "title": "Amazon S3 Website Configuration Redirect All Requests To Property"
            },
            "aws-properties-s3-websiteconfiguration-routingrules": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html",
                "title": "Amazon S3 Website Configuration Routing Rules Property"
            },
            "aws-properties-s3-websiteconfiguration-routingrules-redirectrule": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html",
                "title": "Amazon S3 Website Configuration Routing Rules Redirect Rule Property"
            },
            "aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html",
                "title": "Amazon S3 Website Configuration Routing Rules Routing Rule Condition Property"
            },
            "aws-properties-sns-subscription": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html",
                "title": "Amazon SNS Subscription Property Type"
            },
            "aws-properties-sqs-queues-redrivepolicy": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues-redrivepolicy.html",
                "title": "Amazon SQS RedrivePolicy"
            },
            "aws-properties-waf-bytematchset-bytematchtuples": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples.html",
                "title": "AWS WAF ByteMatchSet ByteMatchTuples"
            },
            "aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch.html",
                "title": "AWS WAF ByteMatchSet ByteMatchTuples FieldToMatch"
            },
            "aws-properties-waf-ipset-ipsetdescriptors": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-ipset-ipsetdescriptors.html",
                "title": "AWS WAF IPSet IPSetDescriptors"
            },
            "aws-properties-waf-rule-predicates": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html",
                "title": "AWS WAF Rule Predicates"
            },
            "aws-properties-waf-sizeconstraintset-sizeconstraint": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint.html",
                "title": "AWS WAF SizeConstraintSet SizeConstraint"
            },
            "aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch.html",
                "title": "AWS WAF SizeConstraintSet SizeConstraint FieldToMatch"
            },
            "aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples.html",
                "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples"
            },
            "aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch.html",
                "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples FieldToMatch"
            },
            "aws-properties-waf-xssmatchset-xssmatchtuple": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple.html",
                "title": "AWS WAF XssMatchSet XssMatchTuple"
            },
            "aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch.html",
                "title": "AWS WAF XssMatchSet XssMatchTuple FieldToMatch"
            },
            "aws-properties-waf-webacl-action": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-action.html",
                "title": "AWS WAF WebACL Action"
            },
            "aws-properties-waf-webacl-rules": {
                "description": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-rules.html",
                "title": "AWS WAF WebACL Rules"
            }
        }
    }
}
